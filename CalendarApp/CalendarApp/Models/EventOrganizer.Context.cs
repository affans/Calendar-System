//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalendarApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EventOrganizerEntities : DbContext
    {
        public EventOrganizerEntities()
            : base("name=EventOrganizerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<EventFilter> EventFilters { get; set; }
        public virtual DbSet<EventGroupName> EventGroupNames { get; set; }
        public virtual DbSet<EventGroupTitle> EventGroupTitles { get; set; }
        public virtual DbSet<EventTypeOne> EventTypeOnes { get; set; }
        public virtual DbSet<CalendarEvent> CalendarEvents { get; set; }
    
        public virtual ObjectResult<CalendarEvent> usp_GetEventsByGuid(string guid)
        {
            var guidParameter = guid != null ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalendarEvent>("usp_GetEventsByGuid", guidParameter);
        }
    
        public virtual ObjectResult<CalendarEvent> usp_GetEventsByGuid(string guid, MergeOption mergeOption)
        {
            var guidParameter = guid != null ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalendarEvent>("usp_GetEventsByGuid", mergeOption, guidParameter);
        }
    
        public virtual int usp_AddEventFilter(string eventFilter, ObjectParameter guid)
        {
            var eventFilterParameter = eventFilter != null ?
                new ObjectParameter("EventFilter", eventFilter) :
                new ObjectParameter("EventFilter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddEventFilter", eventFilterParameter, guid);
        }
    
        public virtual int Usp_UpdateCalendarEvents(string newValue, string oldValue, Nullable<int> purpose)
        {
            var newValueParameter = newValue != null ?
                new ObjectParameter("newValue", newValue) :
                new ObjectParameter("newValue", typeof(string));
    
            var oldValueParameter = oldValue != null ?
                new ObjectParameter("oldValue", oldValue) :
                new ObjectParameter("oldValue", typeof(string));
    
            var purposeParameter = purpose.HasValue ?
                new ObjectParameter("purpose", purpose) :
                new ObjectParameter("purpose", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UpdateCalendarEvents", newValueParameter, oldValueParameter, purposeParameter);
        }
    }
}
